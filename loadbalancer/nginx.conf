# Configuration du load balancer nginx
# Ce fichier est utilisé pour configurer les règles de répartition de charge (load balancing) pour les applications frontend et backend.

# Le bloc 'events' configure les paramètres généraux de traitement des événements.
events {
    # 'worker_connections' définit le nombre maximum de connexions simultanées qu'un worker nginx peut ouvrir.
    worker_connections 1024;
}

# Le bloc 'http' contient diverses directives pour envoyer des requêtes HTTP.
http {
    # 'upstream' définit un groupe de serveurs qui peuvent être utilisés pour répartir la charge.
    upstream frontend {
        # Ces serveurs correspondent aux conteneurs backend, facilités par Compose, comme défini dans docker-compose.yml
        # 'server angular:4000' spécifie l'adresse et le port du serveur frontend.
        server angular:4000;
    }
    upstream backend {
        # Ces serveurs correspondent aux conteneurs backend, facilités par Compose, comme défini dans docker-compose.yml
        # 'server express:8080' spécifie l'adresse et le port du serveur backend.
        server express:8080;
    }

    # Le bloc 'server' définit un serveur virtuel pour traiter les requêtes.
    server {
        # 'listen 80' indique que le serveur écoute sur le port 80 (HTTP).
        listen 80;
        # 'server_name' définit le nom de domaine ou l'adresse IP du serveur.
        server_name yflpms.com;
        server_name backend;

        # La directive 'location' est utilisée pour définir comment traiter certaines requêtes.
        location / {
            # 'proxy_pass' redirige la requête vers le groupe de serveurs frontend.
            proxy_pass http://frontend;
            # 'proxy_set_header' modifie les en-têtes de la requête avant de la transmettre.
            proxy_set_header Host $host;
        }

        location /backend {
            # Redirige les requêtes vers le groupe de serveurs backend.
            proxy_pass http://backend;
            proxy_set_header Host $host;
        }
    }
}
